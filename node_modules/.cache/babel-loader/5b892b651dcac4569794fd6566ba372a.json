{"ast":null,"code":"require(\"/Users/mason/Sites/extension/node_modules/core-js/modules/es.array.iterator.js\");\n\nrequire(\"/Users/mason/Sites/extension/node_modules/core-js/modules/es.promise.js\");\n\nrequire(\"/Users/mason/Sites/extension/node_modules/core-js/modules/es.object.assign.js\");\n\nrequire(\"/Users/mason/Sites/extension/node_modules/core-js/modules/es.promise.finally.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.match.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/es.string.ends-with.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nfunction init() {\n  var currentUrl = window.location.href;\n\n  if ((location.hostname === \"youtube.com\" || location.hostname === \"www.youtube.com\") && !(currentUrl.indexOf('?t=') !== -1) && !(currentUrl.indexOf('&t=') !== -1)) {\n    var videoId = youtube_parser(currentUrl);\n    var gUrl = \"https://skipr.masondoes.dev/video?video=\" + videoId;\n    fetch(gUrl).then(function (response) {\n      return response.json();\n    }).then(function (video) {\n      runRules(video);\n    });\n  }\n}\n\ninit();\n\nfunction titleModified() {\n  init();\n}\n\nwindow.onload = function () {\n  var titleEl = document.getElementsByTagName(\"title\")[0];\n  var docEl = document.documentElement;\n\n  if (docEl && docEl.addEventListener) {\n    docEl.addEventListener(\"DOMSubtreeModified\", function (evt) {\n      var t = evt.target;\n\n      if (t === titleEl || t.parentNode && t.parentNode === titleEl) {\n        titleModified();\n      }\n    }, false);\n  } else {\n    document.onpropertychange = function () {\n      if (window.event.propertyName == \"title\") {\n        titleModified();\n      }\n    };\n  }\n};\n\nfunction youtube_parser(url) {\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  var match = url.match(regExp);\n  return match && match[7].length == 11 ? match[7] : false;\n}\n\nfunction skipVideo(seconds) {\n  var video = document.getElementsByTagName('video')[0];\n  video.currentTime = parseInt(seconds); // if (video.currentTime) {\n  //     video.currentTime = parseInt(seconds);\n  // }\n  // var interval = setInterval(function () {\n  //     if (video.currentTime) {\n  //         video.currentTime = parseInt(seconds);\n  //         clearInterval(interval);\n  //     }\n  // }, 500);\n}\n\nfunction runRules(video) {\n  chrome.storage.sync.get(\"skipr_rules\", function (items) {\n    var rules = items.skipr_rules;\n    rules.forEach(function (rule, index) {\n      var passedRules = [];\n      passedRules.push(checkRule(rule, video));\n\n      if (typeof rule.and !== 'undefined') {\n        rule.and.forEach(function (extraRule, index) {\n          passedRules.push(checkRule(extraRule, video));\n        });\n      }\n\n      if (passedRules.includes(false)) {} else {\n        if (parseInt(rule.seconds) > 0) {\n          skipVideo(rule.seconds);\n        }\n      }\n    });\n  });\n}\n\nfunction checkRule(rule, video) {\n  if (rule.subject === 'title') {\n    var subject = video.title;\n  }\n\n  if (rule.subject === 'channel') {\n    var subject = video.channelTitle;\n  }\n\n  if (rule.subject === 'date') {\n    var timestamp = Date.parse(video.publishedAt);\n    var dateObject = new Date(timestamp);\n    var subject = timestamp;\n  }\n\n  var seconds = 0;\n\n  if (rule.subject !== 'date') {\n    console.log(\"SINGLE RULE\");\n    console.log(rule);\n\n    switch (rule.modifier) {\n      case 'starts_with':\n        if (rule.string !== '' && subject.startsWith(rule.string)) {\n          return true;\n        }\n\n        break;\n\n      case 'ends_with':\n        if (rule.string !== '' && subject.endsWith(rule.string)) {\n          return true;\n        }\n\n        break;\n\n      case 'contains':\n        if (rule.string !== '' && subject.includes(rule.string)) {\n          return true;\n        }\n\n        break;\n\n      case 'equals':\n        if (rule.string !== '' && subject === rule.string) {\n          return true;\n        }\n\n        break;\n\n      case 'not_equals':\n        if (rule.string !== '' && subject !== rule.string) {\n          return true;\n        }\n\n        break;\n    }\n  } else {\n    var date = new Date(rule.string);\n\n    switch (rule.modifier) {\n      case 'newer_than':\n        if (subject > date) {\n          return true;\n        }\n\n        break;\n\n      case 'older_than':\n        if (subject < date) {\n          return true;\n        }\n\n        break;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/mason/Sites/extension/src/entry/content.js"],"names":["init","currentUrl","window","location","href","hostname","indexOf","videoId","youtube_parser","gUrl","fetch","then","response","json","video","runRules","titleModified","onload","titleEl","document","getElementsByTagName","docEl","documentElement","addEventListener","evt","t","target","parentNode","onpropertychange","event","propertyName","url","regExp","match","length","skipVideo","seconds","currentTime","parseInt","chrome","storage","sync","get","items","rules","skipr_rules","forEach","rule","index","passedRules","push","checkRule","and","extraRule","includes","subject","title","channelTitle","timestamp","Date","parse","publishedAt","dateObject","console","log","modifier","string","startsWith","endsWith","date"],"mappings":"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","sourcesContent":["function init() {\n\tvar currentUrl = window.location.href;\n\tif ((location.hostname === \"youtube.com\" || location.hostname === \"www.youtube.com\") && !(currentUrl.indexOf('?t=') !== -1) && !(currentUrl.indexOf('&t=') !== -1)) {\n\t\tvar videoId = youtube_parser(currentUrl);\n\t\tvar gUrl = \"https://skipr.masondoes.dev/video?video=\" + videoId;\n\t\tfetch(gUrl).then(response => response.json()).then(video => {\n\t\t\trunRules(video);\n\t\t});\n\t}\n}\n\ninit();\n\nfunction titleModified() {\n\tinit();\n}\n\nwindow.onload = function () {\n\tvar titleEl = document.getElementsByTagName(\"title\")[0];\n\tvar docEl = document.documentElement;\n\n\tif (docEl && docEl.addEventListener) {\n\t\tdocEl.addEventListener(\"DOMSubtreeModified\", function (evt) {\n\t\t\tvar t = evt.target;\n\t\t\tif (t === titleEl || (t.parentNode && t.parentNode === titleEl)) {\n\t\t\t\ttitleModified();\n\t\t\t}\n\t\t}, false);\n\t} else {\n\t\tdocument.onpropertychange = function () {\n\t\t\tif (window.event.propertyName == \"title\") {\n\t\t\t\ttitleModified();\n\t\t\t}\n\t\t};\n\t}\n};\n\nfunction youtube_parser(url) {\n\tvar regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n\tvar match = url.match(regExp);\n\treturn (match && match[7].length == 11) ? match[7] : false;\n}\n\nfunction skipVideo(seconds) {\n\tvar video = document.getElementsByTagName('video')[0];\n\tvideo.currentTime = parseInt(seconds);\n\t// if (video.currentTime) {\n\t//     video.currentTime = parseInt(seconds);\n\t// }\n\t// var interval = setInterval(function () {\n\t//     if (video.currentTime) {\n\t//         video.currentTime = parseInt(seconds);\n\t//         clearInterval(interval);\n\t//     }\n\t// }, 500);\n}\n\n\nfunction runRules(video) {\n\tchrome.storage.sync.get(\"skipr_rules\", function (items) {\n\t\tvar rules = items.skipr_rules;\n\t\trules.forEach(function (rule, index) {\n\t\t\tvar passedRules = [];\n\t\t\tpassedRules.push(checkRule(rule, video));\n\t\t\tif (typeof rule.and !== 'undefined') {\n\t\t\t\trule.and.forEach(function (extraRule, index) {\n\t\t\t\t\tpassedRules.push(checkRule(extraRule, video));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (passedRules.includes(false)) {\n\n\t\t\t} else {\n\t\t\t\tif (parseInt(rule.seconds) > 0) {\n\t\t\t\t\tskipVideo(rule.seconds);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction checkRule(rule, video) {\n\tif (rule.subject === 'title') {\n\t\tvar subject = video.title;\n\t}\n\tif (rule.subject === 'channel') {\n\t\tvar subject = video.channelTitle;\n\t}\n\tif (rule.subject === 'date') {\n\t\tvar timestamp = Date.parse(video.publishedAt);\n\t\tvar dateObject = new Date(timestamp);\n\t\tvar subject = timestamp;\n\t}\n\n\tvar seconds = 0;\n\tif (rule.subject !== 'date') {\n\t\tconsole.log(\"SINGLE RULE\")\n\t\tconsole.log(rule)\n\t\tswitch (rule.modifier) {\n\t\t\tcase 'starts_with':\n\t\t\t\tif (rule.string !== '' && subject.startsWith(rule.string)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'ends_with':\n\t\t\t\tif (rule.string !== '' && subject.endsWith(rule.string)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'contains':\n\t\t\t\tif (rule.string !== '' && subject.includes(rule.string)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'equals':\n\t\t\t\tif (rule.string !== '' && subject === rule.string) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'not_equals':\n\t\t\t\tif (rule.string !== '' && subject !== rule.string) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t} else {\n\t\tlet date = new Date(rule.string);\n\t\tswitch (rule.modifier) {\n\t\t\tcase 'newer_than':\n\t\t\t\tif (subject > date) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'older_than':\n\t\t\t\tif (subject < date) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn false;\n}\n"]},"metadata":{},"sourceType":"script"}