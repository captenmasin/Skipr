{"ast":null,"code":"function init() {\n  var currentUrl = window.location.href;\n\n  if ((location.hostname === \"youtube.com\" || location.hostname === \"www.youtube.com\") && !(currentUrl.indexOf('?t=') !== -1) && !(currentUrl.indexOf('&t=') !== -1)) {\n    var videoId = youtube_parser(currentUrl);\n    var gUrl = \"https://skipr.masondoes.dev/video?video=\" + videoId;\n    fetch(gUrl).then(response => response.json()).then(video => {\n      runRules(video);\n    });\n  }\n}\n\ninit();\n\nfunction titleModified() {\n  init();\n}\n\nwindow.onload = function () {\n  var titleEl = document.getElementsByTagName(\"title\")[0];\n  var docEl = document.documentElement;\n\n  if (docEl && docEl.addEventListener) {\n    docEl.addEventListener(\"DOMSubtreeModified\", function (evt) {\n      var t = evt.target;\n\n      if (t === titleEl || t.parentNode && t.parentNode === titleEl) {\n        titleModified();\n      }\n    }, false);\n  } else {\n    document.onpropertychange = function () {\n      if (window.event.propertyName == \"title\") {\n        titleModified();\n      }\n    };\n  }\n};\n\nfunction youtube_parser(url) {\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  var match = url.match(regExp);\n  return match && match[7].length == 11 ? match[7] : false;\n}\n\nfunction skipVideo(seconds) {\n  var video = document.getElementsByTagName('video')[0];\n  video.currentTime = parseInt(seconds); // if (video.currentTime) {\n  //     video.currentTime = parseInt(seconds);\n  // }\n  // var interval = setInterval(function () {\n  //     if (video.currentTime) {\n  //         video.currentTime = parseInt(seconds);\n  //         clearInterval(interval);\n  //     }\n  // }, 500);\n}\n\nfunction runRules(video) {\n  chrome.storage.sync.get(\"skipr_rules\", function (items) {\n    var rules = items.skipr_rules;\n    rules.forEach(function (rule) {\n      var passedRules = [];\n      passedRules.push(checkRule(rule, video));\n\n      if (typeof rule.and !== 'undefined') {\n        rule.and.forEach(function (extraRule) {\n          passedRules.push(checkRule(extraRule, video));\n        });\n      }\n\n      if (!passedRules.includes(false)) if (parseInt(rule.seconds) > 0) {\n        skipVideo(rule.seconds);\n      }\n    });\n  });\n}\n\nfunction checkRule(rule, video) {\n  var subject = '';\n\n  if (rule.subject === 'title') {\n    subject = video.title;\n  }\n\n  if (rule.subject === 'channel') {\n    subject = video.channelTitle;\n  }\n\n  if (rule.subject === 'date') {\n    var timestamp = Date.parse(video.publishedAt); // var dateObject = new Date(timestamp);\n\n    subject = timestamp;\n  }\n\n  if (subject !== 'date') {\n    switch (rule.modifier) {\n      case 'starts_with':\n        if (rule.string !== '' && subject.startsWith(rule.string)) {\n          return true;\n        }\n\n        break;\n\n      case 'ends_with':\n        if (rule.string !== '' && subject.endsWith(rule.string)) {\n          return true;\n        }\n\n        break;\n\n      case 'contains':\n        if (rule.string !== '' && subject.includes(rule.string)) {\n          return true;\n        }\n\n        break;\n\n      case 'equals':\n        if (rule.string !== '' && subject === rule.string) {\n          return true;\n        }\n\n        break;\n\n      case 'not_equals':\n        if (rule.string !== '' && subject !== rule.string) {\n          return true;\n        }\n\n        break;\n    }\n  } else {\n    let date = new Date(rule.string);\n\n    switch (rule.modifier) {\n      case 'newer_than':\n        if (subject > date) {\n          return true;\n        }\n\n        break;\n\n      case 'older_than':\n        if (subject < date) {\n          return true;\n        }\n\n        break;\n    }\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"script"}